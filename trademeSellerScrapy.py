from bs4 import BeautifulSoup


# Here is where we will begin scraping
page1_url = "https://www.trademe.co.nz/stores/franklin-engineering-ltd/feedback?page=2"

def read_url(url):
    # This reads in a url and returns a BeautifulSoup
    # object. It also catches errors if something goes
    # wrong
    from urllib.request import urlopen
    from urllib.request import HTTPError
    try:
        html = urlopen(url)
    except HTTPError as e:
        print(e)
        return None
    try:
        soup = BeautifulSoup(html.read(), "lxml")
    except AttributeError as e:
        print(e)
        return None
    return soup

soup = read_url(page1_url)
print(soup.get_text())

testList = ['#1749028044', '#1719590972', '#1766660932', '#1768137110', '#1767856780', '#1771821990', '#1746690079', '#1764821199', '#1764370132', '#1766088236', '#1761041763', '#1760674355', '#1726729686', '#1748991271', '#1719238103', '#1761060617', '#1753175863', '#1736322930', '#1736743414', '#1760351737', '#1757064457', '#1736487127', '#1733090774', '#1753175385', '#1750394837', '#1745351829', '#1707782739', '#1747668270', '#1748969863', '#1745351829', '#1749028461', '#1748294803', '#1733045933', '#1745351416', '#1732395504', '#1740630287', '#1740315613', '#1741926788', '#1728805155', '#1730707307', '#1738650584', '#1733095051', '#1736784785', '#1738290938', '#1731890840', '#1726729686', '#1739831435', '#1732878987', '#1728856957', '#1717127054', '#1731800866', '#1721572533', '#1716859606', '#1705337387', '#1713236215', '#1717259100', '#1717217949', '#1718766194', '#1729392715', '#1713229965', '#1725395472', '#1719154731', '#1716656360', '#1697596779', '#1714659607', '#1713230128', '#1710998003', '#1707764742', '#1721572613', '#1700128921', '#1680263757', '#1712396040', '#1700135110', '#1697604636', '#1712087526', '#1713237687', '#1685820118', '#1705337317', '#1707670790', '#1706735307', '#1713236925', '#1713230949', '#1710892737', '#1693341684', '#1712230961', '#1708676592', '#1713230053', '#1685776043', '#1708930121', '#1708676592', '#1705337159', '#1703504447', '#1706735307', '#1675167434', '#1674682584', '#1674690834', '#1670296472', '#1670130560', '#1673757291', '#1670834034', '#1673603040', '#1707782747', '#1692049607', '#1682257629', '#1701027847', '#1698941613', '#1704525057', '#1677921539', '#1694591007', '#1682260497', '#1678240886', '#1678268158', '#1678223440', '#1696648083', '#1693498429', '#1703089800', '#1697598867', '#1697022567', '#1688063676', '#1674683610', '#1663121442', '#1659593383', '#1666847134', '#1685618243', '#1693555855', '#1693341684', '#1689912054', '#1667081719', '#1655456697', '#1687621023', '#1685980438', '#1687621023', '#1659374369', '#1659373968', '#1681837977', '#1674691047', '#1674691029', '#1676068922', '#1680263757', '#1677511307', '#1680263757', '#1681546969', '#1654816330', '#1651775501', '#1679865759', '#1674682842', '#1678240880', '#1651769590', '#1651775911', '#1669938431', '#1659374261', '#1629528390', '#1676170681', '#1659366010', '#1673799842', '#1659374225', '#1651775700', '#1670811299', '#1655519912', '#1655466411', '#1651775577', '#1667081854', '#1666847134', '#1629536144', '#1666847134', '#1625282901', '#1666329339', '#1662704064', '#1666019608', '#1670296472', '#1646878900', '#1651767138', '#1651776248', '#1669938431', '#1667291975', '#1659366010', '#1659151086', '#1666019128', '#1656007160', '#1667207619', '#1659488165', '#1659151086', '#1659373820', '#1666716588', '#1661879668', '#1651767720', '#1651775592', '#1664157778', '#1654274490', '#1624611833', '#1644326391', '#1644326576', '#1659365668', '#1659367677', '#1662527634', '#1646838453', '#1648044202', '#1622005847', '#1658760437', '#1644326338', '#1646886400', '#1644318603', '#1646858239', '#1659365508', '#1659367222', '#1655459078', '#1659365986', '#1654262866', '#1651776400', '#1654236087', '#1644318421', '#1644318438', '#1629536213', '#1639447860', '#1655495504', '#1646878900', '#1644318729', '#1644326594', '#1638500102', '#1614608362', '#1640140539', '#1644326274', '#1632053624', '#1636929416', '#1636929247', '#1610890408', '#1636929216', '#1646644522', '#1629536093', '#1636921800', '#1633228798', '#1636929416', '#1640623426', '#1629536093', '#1632784897', '#1636584765', '#1632780413', '#1633060169', '#1635888317', '#1629529182', '#1629529188', '#1629529170', '#1614601521', '#1629536596', '#1629528959', '#1629536596', '#1629750665', '#1629528772', '#1607247698', '#1629528097', '#1629756396', '#1607247394', '#1629536561', '#1622005822', '#1614608408', '#1629528718', '#1621999800', '#1622005759', '#1593427804', '#1622328315', '#1614608688', '#1614600793', '#1622006053', '#1614608408', '#1614601141', '#1614600055', '#1607239958', '#1607240239', '#1600320575', '#1614600711', '#1607246939', '#1614827279', '#1614601338', '#1587991921', '#1607247181', '#1578959439', '#1578959439', '#1607239460', '#1585967234', '#1600320506', '#1600320489', '#1600313484', '#1600320489', '#1603598967', '#1593435566', '#1593427810', '#1593427542', '#1593427622', '#1600313572', '#1600313220', '#1600313823', '#1593427477', '#1600313555', '#1600313634', '#1574507610', '#1573122952', '#1593435235', '#1559223164', '#1585537611', '#1589771486', '#1574034495', '#1586048578', '#1585409037', '#1583979216', '#1568104247', '#1565960494', '#1570737258', '#1585538478', '#1578839323', '#1583094080', '#1585541921', '#1585540050', '#1579310429', '#1574507610', '#1578692598', '#1578829602', '#1581231754', '#1578830183', '#1585536467', '#1571587993', '#1576326287', '#1572098378', '#1572103787', '#1572110123', '#1572223935', '#1572099197', '#1572103656', '#1548796459', '#1565712902', '#1578692598', '#1572104546', '#1572259885', '#1572096355', '#1570755335', '#1571474535', '#1572101679', '#1572109820', '#1565577126', '#1565831222', '#1546774607', '#1554690101', '#1568019496', '#1569915303', '#1559389115', '#1565707346', '#1565707802', '#1552883998', '#1552888871', '#1552884209', '#1552881843', '#1561177542', '#1565706009', '#1563461980', '#1563236164', '#1559682395', '#1565706705', '#1558744190', '#1552887793', '#1547796491', '#1542620226', '#1554151655', '#1555162024', '#1549375182', '#1559228839', '#1559682395', '#1548908779', '#1559345017', '#1552887793', '#1540683891', '#1534054301', '#1534054255', '#1552883012', '#1552886423', '#1547804091', '#1548907811', '#1534060915', '#1534460277', '#1546653176', '#1550257199', '#1534060887', '#1546655807', '#1546529398', '#1529160911', '#1527902350', '#1527896152', '#1546528283', '#1540245299', '#1546967208', '#1540686338', '#1527896475', '#1527896263', '#1527897767', '#1546524368', '#1546653176', '#1544401006', '#1540247129', '#1540242780', '#1540301694', '#1505965927', '#1528115497', '#1539753743', '#1522449958', '#1536175245', '#1534053465', '#1534174228', '#1527896130', '#1534052098', '#1534053207', '#1521924431', '#1509373061', '#1508476672', '#1527905748', '#1527899848', '#1507079941', '#1527895597', '#1521918986', '#1522040605', '#1528009588', '#1527899992', '#1527899519', '#1530103822', '#1508206164', '#1521925926', '#1522052752', '#1521924431', '#1522449958', '#1521924311', '#1522048345', '#1521923266', '#1482870630', '#1490616970', '#1490270517', '#1521925605', '#1507084383', '#1521933222', '#1513059741', '#1507152678', '#1495069755', '#1512249163', '#1506981943', '#1512343133', '#1519219209', '#1512263037', '#1512263037', '#1510320249', '#1507079941', '#1505162697', '#1509426387', '#1506937592', '#1510320249', '#1492696536', '#1491446312', '#1508206164', '#1499285559', '#1486131848', '#1501565656', '#1495069734', '#1477218372', '#1487393007', '#1481955380', '#1496033651', '#1471186916', '#1471578632', '#1496133242', '#1485911075', '#1487393007', '#1490352400', '#1477222122', '#1489279350', '#1494249638', '#1493605742', '#1490464062', '#1485911075', '#1490287809', '#1473278671', '#1487409562', '#1478057074', '#1476794443', '#1488725363', '#1486406796', '#1484164147', '#1484164147', '#1483290688', '#1477166177', '#1483308372', '#1464920229', '#1477335580', '#1480514960', '#1461360925', '#1475988829', '#1474739994', '#1462902824', '#1453722984', '#1470030196', '#1475893359', '#1462547698', '#1462902824', '#1476056150', '#1478373637', '#1472975495', '#1476562544', '#1473186568', '#1459328634', '#1475943539', '#1464802228', '#1475988829', '#1452655630', '#1439920248', '#1438207356', '#1444068005', '#1443927057', '#1441433054', '#1435840701', '#1459584517', '#1460324341', '#1472975495', '#1460320491', '#1460443139', '#1450567325', '#1441060064', '#1471189155', '#1449652096', '#1471186898', '#1465555902', '#1453462509', '#1449652096', '#1464747224', '#1447456397', '#1458135138', '#1463714595', '#1460443139', '#1454185968', '#1449652096', '#1448234515', '#1448088960', '#1439912122', '#1454322620', '#1439958062', '#1440201421', '#1454102831', '#1454895260', '#1458134846', '#1438207356', '#1430449979', '#1454500778', '#1438204924', '#1448279298', '#1449451393', '#1443922930', '#1448153852', '#1440091355', '#1451426004', '#1453268641', '#1440244975', '#1430069177', '#1430449979', '#1443927057', '#1430752991', '#1442994074', '#1446372479', '#1421923533', '#1413244783', '#1427421233', '#1425057324', '#1430069177', '#1432080714', '#1435063541', '#1420423537', '#1440097551', '#1435171100', '#1429058384', '#1400942483', '#1422970389', '#1432080714', '#1434636945', '#1408793833', '#1441433054', '#1419405574', '#1428907043', '#1433146980', '#1433426875', '#1407007559', '#1436079947', '#1433426875', '#1422086733', '#1419405600', '#1431344784', '#1420423537', '#1425347568', '#1428179364', '#1431928552', '#1427237336', '#1401111869', '#1403542946', '#1424295183', '#1426667649', '#1430253832', '#1408908892', '#1409518702', '#1428397885', '#1424004156', '#1415527471', '#1422353885', '#1419564842', '#1406639447', '#1427237336', '#1405783716', '#1420007650', '#1416245283', '#1414499636', '#1414439470', '#1419564842', '#1399167261', '#1407370023', '#1400237346', '#1420085124', '#1413352528', '#1414441695', '#1401666329', '#1419564842', '#1412352608', '#1415408250', '#1390507845', '#1411531022', '#1410782037', '#1416525024', '#1397222601', '#1415007320', '#1409968194', '#1405628746', '#1412566554', '#1408822167', '#1393559696', '#1411654864', '#1411136767', '#1403623851', '#1390404872', '#1403945964', '#1404028996', '#1404831783', '#1403623851', '#1389557625', '#1404164421', '#1405663023', '#1404028996', '#1403623851', '#1404621625', '#1405525584', '#1401007728', '#1404621625', '#1404028996', '#1394525546', '#1376631809', '#1405628746', '#1389463920', '#1367978649', '#1387325606', '#1386255435', '#1401197687', '#1401050502', '#1388161411', '#1388720004', '#1381076553', '#1382832497', '#1381587367', '#1393452206', '#1381100109', '#1373876084', '#1397222601', '#1396579621', '#1391738329', '#1394471239', '#1393452206', '#1393411289', '#1379627917', '#1391595213', '#1390404872', '#1375613767', '#1393700041', '#1388719784', '#1388161411', '#1388892383', '#1372012107', '#1388637536', '#1378516950', '#1385954619', '#1362491326', '#1382928341', '#1386057171', '#1371136371', '#1386122404', '#1382166218', '#1382928249', '#1389557798', '#1363532719', '#1373863687', '#1366130636', '#1379627917', '#1382166690', '#1366720235', '#1363533122', '#1381498888', '#1363824864', '#1377485740', '#1361562165', '#1359198647', '#1373876084', '#1371224300', '#1378396330', '#1354078021', '#1374685762', '#1367978668', '#1371275806', '#1373728519', '#1373965254', '#1357109041', '#1371136371', '#1370348747', '#1365041136', '#1370023736', '#1370348747', '#1353722667', '#1366580286', '#1362466143', '#1356079062', '#1360672959', '#1351066172', '#1356261439', '#1358437763', '#1356011236', '#1340191041', '#1362965940', '#1359038440', '#1356176581', '#1363824864', '#1351862041', '#1348581032', '#1342890366', '#1343731200', '#1355033836', '#1353722667', '#1342095015', '#1356182189', '#1352059452', '#1348332599', '#1351862041', '#1352059452', '#1358437763', '#1351524082', '#1339697009', '#1355346198', '#1350525225', '#1337780779', '#1352059929', '#1348581032', '#1349596571', '#1347016282', '#1348367903', '#1349763711', '#1340663943', '#1322730355', '#1338690276', '#1347016282', '#1348424727', '#1348622692', '#1348622556', '#1347463822', '#1340651654', '#1336893840', '#1340950563', '#1339499661', '#1349763711', '#1340806881', '#1345812075', '#1339696931', '#1339697009', '#1339696931', '#1334643541', '#1343164929', '#1329325673', '#1328420582', '#1330395093', '#1328420582']



page1_url_prefix = "https://www.trademe.co.nz/"

def read_url(url):
    # This reads in a url and returns a BeautifulSoup
    # object. It also catches errors if something goes
    # wrong
    from urllib.request import urlopen
    from urllib.request import HTTPError
    try:
        html = urlopen(url)
    except HTTPError as e:
        print(e)
        return None
    try:
        soup = BeautifulSoup(html.read(), "lxml")
    except AttributeError as e:
        print(e)
        return None
    return soup

productNames = []
productPrices = []

for listID in testList:
    appendix = listID[1:]
    page1_url = page1_url_prefix + appendix
    print(page1_url)
    soup = read_url(page1_url)

    if (soup == None):
        continue



    try:
        productName = soup.find("div", {"id" : "ListingTitleBox_TitleText"}).get_text()
        productNames.append(productName)
        print(productName)
    except AttributeError as e:
        print("noName")
        productNames.append("noName")

    try:
        productPrice = soup.find("div", {"id": "BuyNow_BuyNow"}).get_text()
        productPrices.append(productPrice)
        print(productPrice)

    except AttributeError as e:
        try:
            productPrice = soup.find("div", {"id": "Bidding_CurrentBidValue"}).get_text()
            productPrices.append(productPrice)
            print(productPrice)
            print("noPrice-" + productPrice)
        except AttributeError as e:
            productPrices.append("noPrice")
            print("noPrice")


    print("----------------------------------------------------")

import pandas as pd

try:
    percentile_list = pd.DataFrame(
        {'productName': productNames,
        'productPrice': productPrices
        })
except ValueError:
    pass

print(len(productNames))
print(len(productPrices))

percentile_list.to_csv("sellingListFrank")





